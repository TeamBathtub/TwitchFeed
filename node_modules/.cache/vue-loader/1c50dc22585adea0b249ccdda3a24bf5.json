{"remainingRequest":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kristinhortsch/dev/TwitchFeed/app/src/components/search/Streamers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/src/components/search/Streamers.vue","mtime":1545157655978},{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from '../../services/api.js';\nimport Streamer from './Streamer.vue';\nimport StreamerSearch from './StreamerSearch.vue';\nimport Top100 from './Top100.vue';\n\nexport default {\n  data() {\n    const search = this.$route.query.search;\n    return {\n      results: null,\n      streamers: null,\n      filteredStreamers: [],\n      search: search ? decodeURIComponent(this.$route.query.search) : ''\n    };\n  },\n  components: {\n    Streamer,\n    StreamerSearch,\n    Top100\n  },\n  created() {\n    this.searchStreamers();\n    api.getTop100()\n      .then(response => \n        this.results = response.data);\n  },\n  watch: {\n    $route(newRoute) {\n      const newSearch = newRoute.query.search;\n      this.search = decodeURIComponent(newSearch);\n      this.searchStreamers();\n    }\n  },\n  methods: {\n    handleSearch(search) {\n      this.search = search || '';\n      this.searchStreamers();\n    },\n    searchStreamers() {\n      api.getStreamers(this.search)\n        .then(response => {\n          this.streamers = response.data;\n        })\n        .catch(err => {\n          this.error = err.message;\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Streamers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Streamers.vue","sourceRoot":"src/components/search","sourcesContent":["<template>\n  <section class=\"streamers\">\n    <h2>Search by Streamer Name</h2>\n\n    <StreamerSearch v-bind:onSearch=\"handleSearch\" v-bind:search=\"search\"/>\n    \n    <div class=\"search-container\">\n      <ul v-if=\"streamers\">\n        <Streamer v-for=\"(streamer, index) in streamers\"\n          v-bind:key=\"index\"\n          v-bind:streamer=\"streamer\"/>\n      </ul>\n    </div>\n\n    <h2>View Top 100 Streamers</h2>\n    <Top100 class=\"grid\" v-bind:results=\"results\"></Top100>\n\n  </section>\n</template>\n\n<script>\nimport api from '../../services/api.js';\nimport Streamer from './Streamer.vue';\nimport StreamerSearch from './StreamerSearch.vue';\nimport Top100 from './Top100.vue';\n\nexport default {\n  data() {\n    const search = this.$route.query.search;\n    return {\n      results: null,\n      streamers: null,\n      filteredStreamers: [],\n      search: search ? decodeURIComponent(this.$route.query.search) : ''\n    };\n  },\n  components: {\n    Streamer,\n    StreamerSearch,\n    Top100\n  },\n  created() {\n    this.searchStreamers();\n    api.getTop100()\n      .then(response => \n        this.results = response.data);\n  },\n  watch: {\n    $route(newRoute) {\n      const newSearch = newRoute.query.search;\n      this.search = decodeURIComponent(newSearch);\n      this.searchStreamers();\n    }\n  },\n  methods: {\n    handleSearch(search) {\n      this.search = search || '';\n      this.searchStreamers();\n    },\n    searchStreamers() {\n      api.getStreamers(this.search)\n        .then(response => {\n          this.streamers = response.data;\n        })\n        .catch(err => {\n          this.error = err.message;\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\nh2 {\n  text-align: center;\n}\n\n</style>"]}]}