{"remainingRequest":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kristinhortsch/dev/TwitchFeed/app/src/components/auth/Auth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/src/components/auth/Auth.vue","mtime":1545154629629},{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kristinhortsch/dev/TwitchFeed/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    onSignIn: Function,\n    onSignUp: Function\n  },\n  data() {\n    return {\n      method: 'signin',\n      error: '',\n      profile: {\n        username: '',\n        firstName: '',\n        email: '',\n        password: ''\n      } \n    };\n  }, \n  methods: {\n    handleSignInSubmit() {\n      this.error = '',\n      this.onSignIn(this.profile)\n        .catch(error => {\n          this.error = error.error;\n        });\n    },\n    handleSignUpSubmit() {\n      this.error = '';\n      this.onSignUp(this.profile)\n        .catch(error => {\n          this.error = error.error;\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Auth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Auth.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n  <section class=\"wrapper\">\n    <div class=\"video-wrap\">\n    </div>\n    <div class=\"overlay\" v-if=\"method === 'signin'\">\n      <h1> Welcome to Twitch Feed </h1>\n      <form @submit.prevent=\"handleSignInSubmit(profile)\">\n        <label>\n          Username: \n          <input v-model=\"profile.username\" required>\n        </label>\n        <label>\n          Password:\n          <input v-model=\"profile.password\" required> \n        </label>\n          <button> Sign In </button>\n    </form>\n         <p>\n        Need to Register?\n        <button @click=\"method = 'signup'\"> Sign Up </button>\n        </p>\n    </div>\n      <div class=\"overlay\" v-else>\n        <h2>Sign Up</h2>\n        <form @submit.prevent=\"handleSignUpSubmit(profile)\"> \n        <label>\n          Name:\n          <input v-model=\"profile.firstName\" required>\n        </label>\n        <label>\n          Username:\n          <input v-model=\"profile.username\" required>\n        </label>\n        <label>\n          Email:\n          <input v-model=\"profile.email\" required>\n        </label>\n        <label>\n          Password:\n          <input  v-model=\"profile.password\" required>\n        </label>\n        <label>\n          <button>Sign Up</button>\n        </label>\n      </form> \n    </div>\n     <pre v-if=\"error\">{{error}}</pre>\n  </section>\n</template>\n\n<script>\nexport default {\n  props: {\n    onSignIn: Function,\n    onSignUp: Function\n  },\n  data() {\n    return {\n      method: 'signin',\n      error: '',\n      profile: {\n        username: '',\n        firstName: '',\n        email: '',\n        password: ''\n      } \n    };\n  }, \n  methods: {\n    handleSignInSubmit() {\n      this.error = '',\n      this.onSignIn(this.profile)\n        .catch(error => {\n          this.error = error.error;\n        });\n    },\n    handleSignUpSubmit() {\n      this.error = '';\n      this.onSignUp(this.profile)\n        .catch(error => {\n          this.error = error.error;\n        });\n    }\n  }\n};\n</script>\n<style>\n/* body {\n  font-size: 40pt;\n  color:rgb(255, 255, 255);\n}\nlabel {\n  font-size: 20pt;\n}\nh1 {\n  margin-top: 100pt;\n}\nsection {\n  text-align: center;\n}\n.wrapper {\n  height: 100%;\n  position: fixed;\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n.video-wrap {\n  position: fixed;\n  width: 100%; \n  height: 100%;\n  opacity: .3;\n  z-index: 1;\n}\n.overlay {\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgba(103, 17, 129, 0.221);\n  opacity: .6;\n} */\n</style>\n"]}]}